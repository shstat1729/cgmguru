% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cgmguru-functions-docs.R
\name{detect_hyperglycemic_events}
\alias{detect_hyperglycemic_events}
\title{Detect Hyperglycemic Events}
\arguments{
\item{new_df}{A dataframe containing CGM data with columns: id, time, gl}

\item{reading_minutes}{Time interval between readings in minutes (optional)}

\item{dur_length}{Minimum duration in minutes for event classification (default: 120)}

\item{end_length}{End length criteria in minutes (default: 15)}

\item{start_gl}{Starting glucose threshold in mg/dL (default: 250)}

\item{end_gl}{Ending glucose threshold in mg/dL (default: 180)}
}
\value{
A list containing:
\itemize{
  \item \code{events_total}: Tibble with summary statistics per subject (id, total_events, avg_ep_per_day)
  \item \code{events_detailed}: Tibble with detailed event information (id, start_time, start_glucose, end_time, end_glucose, start_indices, end_indices)
}
}
\description{
Identifies and segments hyperglycemic events in CGM data based on specified
glucose thresholds and duration criteria aligned with international consensus 
CGM metrics (Battelino et al., 2023). Events are detected when glucose
exceeds the start threshold for the minimum duration and ends when glucose
falls below the end threshold for the specified end length.
}
\examples{
# Load sample data
library(iglu)
data(example_data_5_subject)
data(example_data_hall)

# Level 1 Hyperglycemia Event (≥15 consecutive min of >180 mg/dL)
hyper_lv1 <- detect_hyperglycemic_events(
  example_data_5_subject, 
  start_gl = 180, 
  dur_length = 15, 
  end_length = 15, 
  end_gl = 180
)
print(hyper_lv1$events_total)

# Level 2 Hyperglycemia Event (≥15 consecutive min of >250 mg/dL)
hyper_lv2 <- detect_hyperglycemic_events(
  example_data_5_subject, 
  start_gl = 250, 
  dur_length = 15, 
  end_length = 15, 
  end_gl = 250
)

# Extended Hyperglycemia Event (default parameters)
hyper_extended <- detect_hyperglycemic_events(example_data_5_subject)

# Analysis on larger dataset
large_hyper <- detect_hyperglycemic_events(example_data_hall, start_gl = 180, dur_length = 15, end_length = 15, end_gl = 180)
print(paste("Total hyperglycemic events:", sum(large_hyper$events_total$total_events)))

# View detailed events for first subject
if(nrow(hyper_lv1$events_detailed) > 0) {
  first_subject <- hyper_lv1$events_detailed$id[1]
  subject_events <- hyper_lv1$events_detailed[hyper_lv1$events_detailed$id == first_subject, ]
  head(subject_events)
}
}
